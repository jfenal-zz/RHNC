#!/usr/bin/perl
use strict;
use warnings;

use lib qw( . .. lib ../lib );
use RHNC;
use RHNC::Session;
use Carp;
use Getopt::Long qw(GetOptionsFromArray);
use Data::Dumper;

use vars qw($rhnc);

=head1 NAME

rhnc-org - Operate on Satellite managed organisations

=head1 USAGE

  rhnc-ak command [options or parameters]

=head1 REQUIRED ARGUMENTS

At least command is required for this script to operate. No shell is
currently offered, although this may come in the future.

=head1 DESCRIPTION

The following commands are available:

=cut

=head2 create

TODO : not implemented yet

=cut

sub create {
    my @args = @_;

    # FIXME : this cannot work as it is. Add argument parsing here
    # using Getopt::Long
    #    RHNC::Org->create( rhnc => $rhnc, @args );
}

=head2 destroy

Destroy an organisation;

  rhnc-org destroy org-name

=cut

sub destroy {
    my @args = @_;

    foreach my $kname (@args) {
        my $org = RHNC::Org->get( $rhnc, $kname );
        if ( defined $org ) {
            $org->delete( $rhnc, $kname );
        }
    }
}

=head2 list

List organisations

  rhnc-org list
  rhnc-org list -v  # not yet implemented

=cut

sub list {
    my @args = @_;
    my ( $verbose, $reactivationkey );

    my $result = GetOptionsFromArray( \@args, 'verbose|v' => \$verbose, );

    my $orgl = RHNC::Org->list($rhnc);

    my $nr = 0;
    foreach my $org (@$orgl) {
        my $desc = $org->name;
        printf( "%-36s \n", $org->name );
        print Dumper $org if $verbose;
    }
    print "\n" . scalar(@$orgl) . " organisation(s)\n";

    return 0;
}

=head1 OPTIONS

See the various commands for options available.

=head1 DIAGNOSTICS

See L<EXIT STATUS>.

=head1 EXIT STATUS

TODO. 
This script will return 1 for success, 0 for failure. Not very
consistent for now, likely to change.

=head1 CONFIGURATION

See L<RHNC>.

=head1 DEPENDENCIES

=over 4

=item * L<RHNC>

=item * L<Pod::Usage>

=back

=head1 INCOMPATIBILITIES

See L<RHNC>.

=head1 BUGS AND LIMITATIONS

See L<RHNC>.

=head1 AUTHOR

Jérôme Fenal L<< <jfenal@redhat.com> >>.

=head1 LICENSE AND COPYRIGHT

Copyright 2009, 2010 Jérôme Fenal, all rights reserved.

This module is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut

$rhnc = RHNC::Session->new();

my @args = @ARGV;
my $cmd  = shift @args;
my $rc = 0;

my %func = (
    '^(?:l|li|lis|list)$' => \&list,
    '^destroy$'           => \&destroy,
);

SWITCH: foreach my $c ($cmd) {
    next SWITCH if ! defined $c;
    foreach my $re ( keys %func ) {
        if ( $c =~ m/$re/oimxs ) {
            $rc = $func{$re}->(@args);
            last SWITCH;
        }
    }
}

exit $rc;

